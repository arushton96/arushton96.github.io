{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"","tags":["tag1","tag2"]},{"location":"#introduction","title":"Introduction","text":"<p>My name is Andrew, and I am a member of team 305. This webpage is for my EGR314 Spring Semester class project.</p>","tags":["tag1","tag2"]},{"location":"#project-summary","title":"Project Summary","text":"<p>For team 305's project we are creating a line-following robot like this one. It will use color sensors to detect the location and curve of a line drawn in front of it, and servo motors to control the wheels of the machine.  Currently the plan is to 3D-print a small chassis to hold the components of the car such as the PC boards, sensors, and motors. The user will be able to interface with the robot through both an LCD screen and a Wi-Fi connection.</p>","tags":["tag1","tag2"]},{"location":"#my-contribution","title":"My contribution","text":"<p>My part in this project is to create a Wi-Fi connection using MQTT protocol. The connection will be used in part with the human-machine interface (HMI) to allow diagnostic control over the robot, as well as provide an output for different data from the machine, such as speed, processing time, battery life, and data from the sensors. As the project progresses and I discover more things I can do with MQTT, the scope of what my subsystem does might change, but for the time being it will act as a more user-friendly extension of the HMI system, and will use much of the data collected in that system.</p>","tags":["tag1","tag2"]},{"location":"#continuation","title":"Continuation","text":"<p>Feel free to please peruse through my webpage to see the current progress and workflow of my part of the project. If you would like to navigate back to the group 305's team webpage you can access it right here. There you will find our group contributions and overall structure to our project, as well as links to the individual pages of the rest of the group.</p>","tags":["tag1","tag2"]},{"location":"%20Block-Diagram/","title":"Block Diagram","text":"<p>Block Diagram PDF</p>"},{"location":"API/","title":"Process and Solved Problems","text":"<p>The MQTT subsystem served as the second node in the UART message chain and took on the primary responsibility for message validation and filtering due to its robust communication protocol. Over the course of development, our team determined that only one type of message\u2014live sensor values\u2014needed to be propagated through the system. While sender and receiver IDs were initially planned as key routing elements, they ultimately became redundant for most subsystems. However, the MQTT system retained full protocol enforcement, which required it to remain between the sensor and motor subsystems to ensure only valid messages were processed. To support this, I adapted the receiver ID field to track whether a message had already circulated through the full UART chain. Upon receiving a valid message, the MQTT system rewrote the receiver ID to its own and filtered out any returning messages marked this way, effectively preventing duplication without altering the message structure.</p> <p>A separate challenge arose from the high frequency of sensor messages\u2014often 5 to 10 per second\u2014which could overwhelm the system and prevent the motors from restarting once a stop condition was triggered. To manage this, I implemented a timed filter that suppressed duplicate sensor messages during a defined stop interval. After this delay, the MQTT subsystem automatically resumed motor activity and introduced a secondary lockout period to prevent premature retriggering. This approach ensured reliable operation without requiring upstream changes to the sensor logic.</p> <p> </p>"},{"location":"API/#message-overview","title":"Message Overview","text":"Message 1 Variable Name Sensor_Value Variable Type int8_t Min Value 100 Max Value 101 Example 0x64 &amp; 0x65 <p>As written above, the only value we decided was needed in our system was the live sensor values.</p> <p>The Sender and Receiver bytes are 0x01, 0x03, 0x04, and 0x05. The start byte is 0x41 and the end byte is 0x42. Our \"data\" package of the message is only 1 byte, either 0x64 or 0x65, which represent the only two colors that the sensors were coded to recognize.</p> <p>Team IDs: Sensor = 0x01 | HMI = 0x03 | Motor = 0x05 | MQTT = 0x04</p> <p> </p>"},{"location":"API/#message-format","title":"Message Format","text":"<p>This section shows how I receive a message for the first time from the sensor, and then change the receiver byte before sending it to everyone else and eventually back to me.</p>"},{"location":"API/#format-for-how-i-received-messages-for-first-time","title":"Format For How I Received Messages for First Time","text":"Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte Name Start Sender Receiver Sensor_Value End Byte Type int8_t int8_t int8_t int8_t int8_t Byte Contents 0x41 0x01 0x05 Sensor Byte 0x42"},{"location":"API/#format-for-how-everyone-else-received-messages-and-how-i-received-messages-for-second-time","title":"Format for How Everyone Else Received Messages, and How I Received Messages for Second Time","text":"Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte Name Start Sender Receiver Sensor_Value End Byte Type int8_t int8_t int8_t int8_t int8_t Byte Contents 0x41 0x01 0x04 Sensor Byte 0x42"},{"location":"Bill-Of-Materials/","title":"Bill of Materials","text":"<p>Individual Schematic PDF</p>"},{"location":"Component-Selection/","title":"My Subsystem","text":"<p>On my team, I am responsible for creating the MQTT server, as well as creating the power supply that will feed to the other three subsystems. The main goal of my subsystem will be to connect the project to a computer that will serve not only as the platform for the HMI system and controller but also display diagnostic data from the rest of the system. This data could include battery life, speed, current sensor calculation speed, or current data transfer speed. The exact diagnostics that will be displayed are still undecided by the group as of now, though. I will have UART connections to all three other subsystems, however I will only be sending and receiving data from the HMI subsystem; the other two will only be sending me data.  </p>"},{"location":"Component-Selection/#major-hardware-selection","title":"Major Hardware Selection","text":"<p>This subsystem has no major hardware components for this section.  All components will either be small passive components (resistors, capacitors, etc) or the microcontroller  </p>"},{"location":"Component-Selection/#microcontroller-selection","title":"Microcontroller Selection","text":"ESP Info Answer Model ESP32-S3-WROOM-1 Product Page URL Product Page ESP32-S3-WROOM-1-N4 Datasheet URL Data Sheet ESP32 S3 Datasheet URL ESP32-S3 Series Datasheet ESP32 S3 Technical Reference Manual URL Technical Reference Manual Vendor link Digikey Link Code Examples PubSubLibrary WiFi Library External Resources URL(s) ESP32 MicroPython: MQTT How to setup MQTT for Raspberry Pi and ESP32 Unit cost $2.95 Absolute Maximum Current for entire IC 1500 mA Supply Voltage Range Min: 3.0V  Typical: 3.3V  Max: 3.6V Maximum GPIO current  (per pin) Not explicitly stated in datasheet, however in general around 40mA max and 20mA typical. Supports External Interrupts? Supports external interrupts which can also be used to wake from light sleep mode Required Programming Hardware, Cost, URL USD to Serial converter 5-10$ Module # Available Needed Associated Pins (or * for any) UART 2 2 Pins 10 &amp; 37 (TX)  Pins 11 &amp; 36 (RX) external SPI* 1 0 SPI 0 &amp; 1 (Reserved)  SPI 2 (Pins 18-21)  SPI 3 (Pins 27-30) I2C 2 0 * GPIO 36 0 Any except 1, 2, 3, 40 &amp; 41 ADC 20 0 ADC1 (Pins 4-7, 12, 15, 17, 18, 38, 39)  ADC2 (Pins 8-11, 13, 14, 19-22) LED PWM 36 4 * Motor PWM 36 0 * USB Programmer 1 1 Pins (13 &amp; 14 +VCC/Ground) # Final Selection The determining factors for my microcontroller selection were speed and WiFi capability. The main requirements of the microcontroller for my subsystem are UART communication and WiFi capability. Any other required pins, such as GPIO pins, will be more plentifully available than I need on any board that I choose, so those were not considered in the decision. At a minimum, the subsystem requires 1 UART connection, but more would be easier to use. Both the ESP32 and PIC18 have at least one UART connection, so they both meet my requirements. The PIC does not have internal WiFi capabilities. While I can use external peripherals to supliment that, the ESP32 has the WiFi modules already built into it. The last consideration was speed. The PIC18 has an average clock speed of 40MHz, while the ESP32 has a speed of 240MHz and supports multithreading. This will be helpful when connecting to the MQTT server and handeling data from the other subsystems in real-time."},{"location":"Component-Selection/#esp32-diagram-and-wiring","title":"ESP32 Diagram and Wiring","text":""},{"location":"Schematic-Diagram/","title":"Schematic Diagram","text":"<p>Individual Schematic PDF</p>"},{"location":"esp-32-table/","title":"ESP32 Table","text":"ESP Info Answer Model ESP32-S3-WROOM-1 Product Page URL Product Page ESP32-S3-WROOM-1-N4 Datasheet URL Data Sheet ESP32 S3 Datasheet URL ESP32-S3 Series Datasheet ESP32 S3 Technical Reference Manual URL Technical Reference Manual Vendor link Digikey Link Code Examples PubSubLibrary WiFi Library External Resources URL(s) ESP32 MicroPython: MQTT How to setup MQTT for Raspberry Pi and ESP32 Unit cost $2.95 Absolute Maximum Current for entire IC 1500 mA Supply Voltage Range Min: 3.0V  Typical: 3.3V  Max: 3.6V Maximum GPIO current  (per pin) Not explicitly stated in datasheet, however in general around 40mA max and 20mA typical. Supports External Interrupts? Supports external interrupts which can also be used to wake from light sleep mode Required Programming Hardware, Cost, URL USD to Serial converter 5-10$ Module # Available Needed Associated Pins (or * for any) UART 2 2 Pins 10 &amp; 37 (TX)  Pins 11 &amp; 36 (RX) external SPI* 1 0 SPI 0 &amp; 1 (Reserved)  SPI 2 (Pins 18-21)  SPI 3 (Pins 27-30) I2C 2 0 * GPIO 36 ? Any except 1, 2, 3, 40 &amp; 41 ADC 20 0 ADC1 (Pins 4-7, 12, 15, 17, 18, 38, 39)  ADC2 (Pins 8-11, 13, 14, 19-22) LED PWM 36 4 * Motor PWM 36 0 * USB Programmer 1 1 Pins (13 &amp; 14 +VCC/Ground)"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}